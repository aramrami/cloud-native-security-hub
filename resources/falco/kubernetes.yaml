---
apiVersion: v1
kind: FalcoRules
vendor: Kubernetes
name: Kubernetes
shortDescription: Falco rules for securing Kubernetes clusters
version: 1.0.0
description: |
  # Kubernetes Falco Rules
  Kubernetes (commonly stylized as k8s) is an open-source container-orchestration system for automating application deployment, scaling, and management.

  ## Rules

  ### Unexpected inbound TCP connections

  Detects inbound traffic to Kubernetes components using tcp on a port outside of expected set

  Allowed inbound ports:
  * 6443 (kube-apiserver container)
  * 10252 (kube-controller container)
  * 8443 (kube-dashboard container)
  * 10053, 10055, 8081 (kube-dns container)
  * 10251 (kube-scheduler container)

  ### Unexpected spawned processes

  Detects a process started in a kubernetes cluster outside of an expected set

  Allowed processes:
  * kube-apiserver (for kube-apiserver container)
  * kube-controller-manager (for kube-controller container)
  * /dashboard (kube-dashboard container)
  * /kube-dns (kube-dns container)
  * kube-scheduler (kube-scheduler container)

  ### Unexpected file access readonly

  Detects an attempt to access a file readonly other than below an expected list of directories

  Allowed file prefixes for readonly:
  * /public
keywords:
  - kubernetes
icon: https://upload.wikimedia.org/wikipedia/commons/thumb/3/39/Kubernetes_logo_without_workmark.svg/300px-Kubernetes_logo_without_workmark.svg.png
maintainers:
  - name: nestorsalceda
    link: https://github.com/nestorsalceda
  - name: airadier
    link: https://github.com/airadier
rules:
  - name: apiserver
    raw: |
      #
      # Auto-generated set of falco rules for kube_apiserver containers
      # Generated at 2018-05-23 09:58:49 UTC
      #

      # By default, the autogenerated rules include rules that attempt to
      # restrict the set of system calls that can be performed by
      # applications. However, we know that these rules are fairly FP-prone,
      # so they are disabled by default. If you'd like to enable them,
      # either change or override this macro's condition to "evt.num >= 0".
      - macro: kube_apiserver_consider_syscalls
        condition: (evt.num < 0)

      # These policies are limited to containers, specifically those where
      # the container image name starts with "kube_apiserver"
      - macro: app_kube_apiserver
        condition: container and container.image contains "kube-apiserver"

      # Not considering all inbound networking suspect

      # Not considering all outbound networking suspect

      # Restricting listening ports to selected set

      - list: kube_apiserver_allowed_inbound_ports_tcp
        items: [6443]

      - rule: Unexpected inbound tcp connection kube_apiserver
        desc: Detect inbound traffic to kube_apiserver using tcp on a port outside of expected set
        condition: inbound and evt.rawres >= 0 and not fd.sport in (kube_apiserver_allowed_inbound_ports_tcp) and app_kube_apiserver
        output: Inbound network connection to kube_apiserver on unexpected port (command=%proc.cmdline pid=%proc.pid connection=%fd.name sport=%fd.sport user=%user.name %container.info image=%container.image)
        priority: NOTICE

      # Restricting spawned processes to selected set

      - list: kube_apiserver_allowed_processes
        items: ["kube-apiserver"]

      - rule: Unexpected spawned process kube_apiserver
        desc: Detect a process started in a kube_apiserver container outside of an expected set
        condition: spawned_process and not proc.name in (kube_apiserver_allowed_processes) and app_kube_apiserver
        output: Unexpected process spawned in kube_apiserver container (command=%proc.cmdline pid=%proc.pid user=%user.name %container.info image=%container.image)
        priority: NOTICE

      # Restricting files read or written to specific set

      # Restricting syscalls to selected set

      - list: kube_apiserver_allowed_syscalls
        items: [accept, connect, socket]

      - rule: Unexpected syscall kube_apiserver
        desc: Detect a syscall in a kube_apiserver container outside of an expected set
        condition: kube_apiserver_consider_syscalls and not evt.type in ("<unknown>", kube_apiserver_allowed_syscalls) and app_kube_apiserver
        output: Unexpected syscall in kube_apiserver container (command=%proc.cmdline pid=%proc.pid user=%user.name syscall=%evt.type args=%evt.args %container.info image=%container.image)
        priority: NOTICE
        warn_evttypes: False
  - name: controller
    raw: |
      #
      # Auto-generated set of falco rules for kube_controller containers
      # Generated at 2018-05-23 09:58:49 UTC
      #

      # By default, the autogenerated rules include rules that attempt to
      # restrict the set of system calls that can be performed by
      # applications. However, we know that these rules are fairly FP-prone,
      # so they are disabled by default. If you'd like to enable them,
      # either change or override this macro's condition to "evt.num >= 0".
      - macro: kube_controller_consider_syscalls
        condition: (evt.num < 0)

      # These policies are limited to containers, specifically those where
      # the container image name starts with "kube_controller"
      - macro: app_kube_controller
        condition: container and container.image contains "kube-controller"

      # Not considering all inbound networking suspect

      # Not considering all outbound networking suspect

      # Restricting listening ports to selected set

      - list: kube_controller_allowed_inbound_ports_tcp
        items: [10252]

      - rule: Unexpected inbound tcp connection kube_controller
        desc: Detect inbound traffic to kube_controller using tcp on a port outside of expected set
        condition: inbound and evt.rawres >= 0 and not fd.sport in (kube_controller_allowed_inbound_ports_tcp) and app_kube_controller
        output: Inbound network connection to kube_controller on unexpected port (command=%proc.cmdline pid=%proc.pid connection=%fd.name sport=%fd.sport user=%user.name %container.info image=%container.image)
        priority: NOTICE

      # Restricting spawned processes to selected set

      - list: kube_controller_allowed_processes
        items: ["kube-controller-manager"]

      - rule: Unexpected spawned process kube_controller
        desc: Detect a process started in a kube_controller container outside of an expected set
        condition: spawned_process and not proc.name in (kube_controller_allowed_processes) and app_kube_controller
        output: Unexpected process spawned in kube_controller container (command=%proc.cmdline pid=%proc.pid user=%user.name %container.info image=%container.image)
        priority: NOTICE

      # Restricting files read or written to specific set
  - name: dashboard
    raw: |
      #
      # Auto-generated set of falco rules for kube_dashboard containers
      # Generated at 2018-05-23 09:58:49 UTC
      #

      # By default, the autogenerated rules include rules that attempt to
      # restrict the set of system calls that can be performed by
      # applications. However, we know that these rules are fairly FP-prone,
      # so they are disabled by default. If you'd like to enable them,
      # either change or override this macro's condition to "evt.num >= 0".
      - macro: kube_dashboard_consider_syscalls
        condition: (evt.num < 0)

      # These policies are limited to containers, specifically those where
      # the container image name starts with "kube_dashboard"
      - macro: app_kube_dashboard
        condition: container and container.image contains "kube-dashboard"

      # Not considering all inbound networking suspect

      # Not considering all outbound networking suspect

      # Restricting listening ports to selected set

      - list: kube_dashboard_allowed_inbound_ports_tcp
        items: [8443]

      - rule: Unexpected inbound tcp connection kube_dashboard
        desc: Detect inbound traffic to kube_dashboard using tcp on a port outside of expected set
        condition: inbound and evt.rawres >= 0 and not fd.sport in (kube_dashboard_allowed_inbound_ports_tcp) and app_kube_dashboard
        output: Inbound network connection to kube_dashboard on unexpected port (command=%proc.cmdline pid=%proc.pid connection=%fd.name sport=%fd.sport user=%user.name %container.info image=%container.image)
        priority: NOTICE

      # Restricting spawned processes to selected set

      - list: kube_dashboard_allowed_processes
        items: ["/dashboard"]

      - rule: Unexpected spawned process kube_dashboard
        desc: Detect a process started in a kube_dashboard container outside of an expected set
        condition: spawned_process and not proc.name in (kube_dashboard_allowed_processes) and app_kube_dashboard
        output: Unexpected process spawned in kube_dashboard container (command=%proc.cmdline pid=%proc.pid user=%user.name %container.info image=%container.image)
        priority: NOTICE

      # Restricting files read or written to specific set

      - list: kube_dashboard_allowed_file_prefixes_readonly
        items: ["/public"]

      - rule: Unexpected file access readonly for kube_dashboard
        desc: Detect an attempt to access a file readonly other than below an expected list of directories
        condition: (open_read and evt.is_open_write=false) and not fd.name pmatch (kube_dashboard_allowed_file_prefixes_readonly) and app_kube_dashboard
        output: Unexpected file accessed readonly for kube_dashboard (command=%proc.cmdline pid=%proc.pid file=%fd.name %container.info image=%container.image)
        priority: NOTICE
  - name: dns
    raw: |
      #
      # Auto-generated set of falco rules for kube_dns containers
      # Generated at 2018-05-23 08:29:54 UTC
      #

      # By default, the autogenerated rules include rules that attempt to
      # restrict the set of system calls that can be performed by
      # applications. However, we know that these rules are fairly FP-prone,
      # so they are disabled by default. If you'd like to enable them,
      # either change or override this macro's condition to "evt.num >= 0".
      - macro: kube_dns_consider_syscalls
        condition: (evt.num < 0)

      # These policies are limited to containers, specifically those where
      # the container image name starts with "kube_dns"
      - macro: app_kube_dns
        condition: container and container.image contains "kube-dns"

      # Not considering all inbound networking suspect

      # Not considering all outbound networking suspect

      # Restricting listening ports to selected set

      - list: kube_dns_allowed_inbound_ports_tcp
        items: [10053, 10055, 8081]

      - rule: Unexpected inbound tcp connection kube_dns
        desc: Detect inbound traffic to kube_dns using tcp on a port outside of expected set
        condition: inbound and evt.rawres >= 0 and not fd.sport in (kube_dns_allowed_inbound_ports_tcp) and app_kube_dns
        output: Inbound network connection to kube_dns on unexpected port (command=%proc.cmdline pid=%proc.pid connection=%fd.name sport=%fd.sport user=%user.name %container.info image=%container.image)
        priority: NOTICE

      # Restricting spawned processes to selected set

      - list: kube_dns_allowed_processes
        items: ["/kube-dns"]

      - rule: Unexpected spawned process kube_dns
        desc: Detect a process started in a kube_dns container outside of an expected set
        condition: spawned_process and not proc.name in (kube_dns_allowed_processes) and app_kube_dns
        output: Unexpected process spawned in kube_dns container (command=%proc.cmdline pid=%proc.pid user=%user.name %container.info image=%container.image)
        priority: NOTICE
  - name: scheduler
    raw: |
      #
      # Auto-generated set of falco rules for kube_scheduler containers
      # Generated at 2018-05-23 09:58:49 UTC
      #

      # By default, the autogenerated rules include rules that attempt to
      # restrict the set of system calls that can be performed by
      # applications. However, we know that these rules are fairly FP-prone,
      # so they are disabled by default. If you'd like to enable them,
      # either change or override this macro's condition to "evt.num >= 0".
      - macro: kube_scheduler_consider_syscalls
        condition: (evt.num < 0)

      # These policies are limited to containers, specifically those where
      # the container image name starts with "kube_scheduler"
      - macro: app_kube_scheduler
        condition: container and container.image contains "kube-scheduler"

      # Not considering all inbound networking suspect

      # Not considering all outbound networking suspect

      # Restricting listening ports to selected set

      - list: kube_scheduler_allowed_inbound_ports_tcp
        items: [10251]

      - rule: Unexpected inbound tcp connection kube_scheduler
        desc: Detect inbound traffic to kube_scheduler using tcp on a port outside of expected set
        condition: inbound and evt.rawres >= 0 and not fd.sport in (kube_scheduler_allowed_inbound_ports_tcp) and app_kube_scheduler
        output: Inbound network connection to kube_scheduler on unexpected port (command=%proc.cmdline pid=%proc.pid connection=%fd.name sport=%fd.sport user=%user.name %container.info image=%container.image)
        priority: NOTICE

      # Restricting spawned processes to selected set

      - list: kube_scheduler_allowed_processes
        items: ["kube-scheduler"]

      - rule: Unexpected spawned process kube_scheduler
        desc: Detect a process started in a kube_scheduler container outside of an expected set
        condition: spawned_process and not proc.name in (kube_scheduler_allowed_processes) and app_kube_scheduler
        output: Unexpected process spawned in kube_scheduler container (command=%proc.cmdline pid=%proc.pid user=%user.name %container.info image=%container.image)
        priority: NOTICE

      # Restricting files read or written to specific set

      # Restricting syscalls to selected set

      - list: kube_scheduler_allowed_syscalls
        items: [accept]

      - rule: Unexpected syscall kube_scheduler
        desc: Detect a syscall in a kube_scheduler container outside of an expected set
        condition: kube_scheduler_consider_syscalls and not evt.type in ("<unknown>", kube_scheduler_allowed_syscalls) and app_kube_scheduler
        output: Unexpected syscall in kube_scheduler container (command=%proc.cmdline pid=%proc.pid user=%user.name syscall=%evt.type args=%evt.args %container.info image=%container.image)
        priority: NOTICE
        warn_evttypes: False

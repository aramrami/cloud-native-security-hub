---
apiVersion: v1
kind: FalcoRules
#vendor: Google
name: GKE
shortDescription: Falco rules for securing Google Kubernetes Engine
version: 1.0.0
description: |
  # GKE Falco Rules
  Google Kubernetes Engine (GKE) is a managed, production-ready environment for deploying containerized applications. It brings our latest innovations in developer productivity, resource efficiency, automated operations, and open source flexibility to accelerate your time to market.

  Launched in 2015, Kubernetes Engine builds on Google's experience of running services like Gmail and YouTube in containers for over 12 years. Kubernetes Engine allows you to get up and running with Kubernetes in no time, by completely eliminating the need to install, manage, and operate your own Kubernetes clusters.

  ## Unexpected inbound TCP connections

  Detects inbound traffic to GKE components on a port outside of expected set

  Allowed inbound ports:
  * 8080 TCP (defaultbackend container)
  * 80 TCP (event_exporter container)
  * 10248, 10249, 10250, 10255, 4194, 443, 8080 TCP (hyperkube container)
  * 53 TCP/UDP (k8s_dns container)

  ## Unexpected spawned processes

  Detects a process started in GKE cluster outside of an expected set

  Allowed processes:
  * /server (defaultbackend container)
  * /event-exporter (event_exporter container)
  * For hyperkube container:
    * /bin/bash
    * /bin/findmnt
    * /hyperkube
    * findmnt
    * iptables
    * iptables-restore
    * iptables-save
    * journalctl
    * nsenter
    * sleep
  * For k8s_dns:
    * /dnsmasq-nanny
    * /usr/sbin/dnsmasq
    * dnsmasq

  ## Unexpected file access

  Detects an attempt to access a file other than an expected list of directories

  * /event-exporter (event_exporter container)
  * Read-write outside /dev, /proc, /var/lib/kubelet/pods (hyperkube)
  * Read outside /etc/k8s/dns or write outside /dev (k8s_dns)
keywords:
  - kubernetes
  - google
icon: https://upload.wikimedia.org/wikipedia/commons/thumb/6/61/Google_Cloud_Logo.svg/300px-Google_Cloud_Logo.svg.png
maintainers:
  - name: nestorsalceda
    link: https://github.com/nestorsalceda
  - name: airadier
    link: https://github.com/airadier
rules:
  - name: defaultbackend
    raw: |
      #
      # Auto-generated set of falco rules for defaultbackend containers
      # Generated at 2018-05-23 14:59:00 UTC
      #

      # By default, the autogenerated rules include rules that attempt to
      # restrict the set of system calls that can be performed by
      # applications. However, we know that these rules are fairly FP-prone,
      # so they are disabled by default. If you'd like to enable them,
      # either change or override this macro's condition to "evt.num >= 0".
      - macro: defaultbackend_consider_syscalls
        condition: (evt.num < 0)

      # These policies are limited to containers, specifically those where
      # the container image name starts with "defaultbackend"
      - macro: app_defaultbackend
        condition: container and container.image contains "defaultbackend"

      # Not considering all inbound networking suspect

      # Not considering all outbound networking suspect

      # Restricting listening ports to selected set

      - list: defaultbackend_allowed_inbound_ports_tcp
        items: [8080]

      - rule: Unexpected inbound tcp connection defaultbackend
        desc: Detect inbound traffic to defaultbackend using tcp on a port outside of expected set
        condition: inbound and evt.rawres >= 0 and not fd.sport in (defaultbackend_allowed_inbound_ports_tcp) and app_defaultbackend
        output: Inbound network connection to defaultbackend on unexpected port (command=%proc.cmdline pid=%proc.pid connection=%fd.name sport=%fd.sport user=%user.name %container.info image=%container.image)
        priority: NOTICE

      # Restricting spawned processes to selected set

      - list: defaultbackend_allowed_processes
        items: ["/server"]

      - rule: Unexpected spawned process defaultbackend
        desc: Detect a process started in a defaultbackend container outside of an expected set
        condition: spawned_process and not proc.name in (defaultbackend_allowed_processes) and app_defaultbackend
        output: Unexpected process spawned in defaultbackend container (command=%proc.cmdline pid=%proc.pid user=%user.name %container.info image=%container.image)
        priority: NOTICE

      # Restricting files read or written to specific set

      # Restricting syscalls to selected set

      - list: defaultbackend_allowed_syscalls
        items: [accept]

      - rule: Unexpected syscall defaultbackend
        desc: Detect a syscall in a defaultbackend container outside of an expected set
        condition: defaultbackend_consider_syscalls and not evt.type in ("<unknown>", defaultbackend_allowed_syscalls) and app_defaultbackend
        output: Unexpected syscall in defaultbackend container (command=%proc.cmdline pid=%proc.pid user=%user.name syscall=%evt.type args=%evt.args %container.info image=%container.image)
        priority: NOTICE
        warn_evttypes: False
  - name: event_exporter
    raw: |
      #
      # Auto-generated set of falco rules for event_exporter containers
      # Generated at 2018-05-23 15:00:05 UTC
      #

      # By default, the autogenerated rules include rules that attempt to
      # restrict the set of system calls that can be performed by
      # applications. However, we know that these rules are fairly FP-prone,
      # so they are disabled by default. If you'd like to enable them,
      # either change or override this macro's condition to "evt.num >= 0".
      - macro: event_exporter_consider_syscalls
        condition: (evt.num < 0)

      # These policies are limited to containers, specifically those where
      # the container image name starts with "event_exporter"
      - macro: app_event_exporter
        condition: container and container.image startswith "event_exporter"

      # Not considering all inbound networking suspect

      # Not considering all outbound networking suspect

      # Restricting listening ports to selected set

      - list: event_exporter_allowed_inbound_ports_tcp
        items: [80]

      - rule: Unexpected inbound tcp connection event_exporter
        desc: Detect inbound traffic to event_exporter using tcp on a port outside of expected set
        condition: inbound and evt.rawres >= 0 and not fd.sport in (event_exporter_allowed_inbound_ports_tcp) and app_event_exporter
        output: Inbound network connection to event_exporter on unexpected port (command=%proc.cmdline pid=%proc.pid connection=%fd.name sport=%fd.sport user=%user.name %container.info image=%container.image)
        priority: NOTICE

      # Restricting spawned processes to selected set

      - list: event_exporter_allowed_processes
        items: ["/event-exporter"]

      - rule: Unexpected spawned process event_exporter
        desc: Detect a process started in a event_exporter container outside of an expected set
        condition: spawned_process and not proc.name in (event_exporter_allowed_processes) and app_event_exporter
        output: Unexpected process spawned in event_exporter container (command=%proc.cmdline pid=%proc.pid user=%user.name %container.info image=%container.image)
        priority: NOTICE

      # Restricting files read or written to specific set

      - list: event_exporter_allowed_file_prefixes_readonly
        items: ["/proc"]

      - rule: Unexpected file access readonly for event_exporter
        desc: Detect an attempt to access a file readonly other than below an expected list of directories
        condition: (open_read and evt.is_open_write=false) and not fd.name pmatch (event_exporter_allowed_file_prefixes_readonly) and app_event_exporter
        output: Unexpected file accessed readonly for event_exporter (command=%proc.cmdline pid=%proc.pid file=%fd.name %container.info image=%container.image)
        priority: NOTICE
  - name: hyperkube
    raw: |
      #
      # Auto-generated set of falco rules for hyperkube containers
      # Generated at 2018-05-10 04:57:50 UTC
      #

      # By default, the autogenerated rules include rules that attempt to
      # restrict the set of system calls that can be performed by
      # applications. However, we know that these rules are fairly FP-prone,
      # so they are disabled by default. If you'd like to enable them,
      # either change or override this macro's condition to "evt.num >= 0".
      - macro: hyperkube_consider_syscalls
        condition: (evt.num < 0)

      # These policies are limited to containers, specifically those where
      # the container image name starts with "hyperkube"
      - macro: app_hyperkube
        condition: container and container.image contains "hyperkube"

      # Not considering all inbound networking suspect

      # Not considering all outbound networking suspect

      # Restricting listening ports to selected set

      - list: hyperkube_allowed_inbound_ports_tcp
        items: [10248, 10249, 10250, 10255, 4194, 443, 8080]

      - rule: Unexpected inbound tcp connection hyperkube
        desc: Detect inbound traffic to hyperkube using tcp on a port outside of expected set
        condition: inbound and evt.rawres >= 0 and not fd.sport in (hyperkube_allowed_inbound_ports_tcp) and app_hyperkube
        output: Inbound network connection to hyperkube on unexpected port (command=%proc.cmdline pid=%proc.pid connection=%fd.name sport=%fd.sport user=%user.name %container.info image=%container.image)
        priority: NOTICE

      # Restricting spawned processes to selected set

      - list: hyperkube_allowed_processes
        items: ["/bin/bash", "/bin/findmnt", "/hyperkube", "findmnt", "iptables", "iptables-restor", "iptables-restore", "iptables-save", "journalctl", "nsenter", "sleep"]

      - rule: Unexpected spawned process hyperkube
        desc: Detect a process started in a hyperkube container outside of an expected set
        condition: spawned_process and not proc.name in (hyperkube_allowed_processes) and app_hyperkube
        output: Unexpected process spawned in hyperkube container (command=%proc.cmdline pid=%proc.pid user=%user.name %container.info image=%container.image)
        priority: NOTICE

      # Restricting files read or written to specific set

      - list: hyperkube_allowed_file_prefixes_readonly
        items: ["/"]

      - rule: Unexpected file access readonly for hyperkube
        desc: Detect an attempt to access a file readonly other than below an expected list of directories
        condition: (open_read and evt.is_open_write=false) and not fd.name pmatch (hyperkube_allowed_file_prefixes_readonly) and app_hyperkube
        output: Unexpected file accessed readonly for hyperkube (command=%proc.cmdline pid=%proc.pid file=%fd.name %container.info image=%container.image)
        priority: NOTICE

      - list: hyperkube_allowed_file_prefixes_readwrite
        items: ["/dev", "/proc", "/var/lib/kubelet/pods"]

      - rule: Unexpected file access readwrite for hyperkube
        desc: Detect an attempt to access a file readwrite other than below an expected list of directories
        condition: (open_write) and not fd.name pmatch (hyperkube_allowed_file_prefixes_readwrite) and app_hyperkube
        output: Unexpected file accessed readwrite for hyperkube (command=%proc.cmdline pid=%proc.pid file=%fd.name %container.info image=%container.image)
        priority: NOTICE
  - name: k8s_dns
    raw: |
      #
      # Auto-generated set of falco rules for k8s_dns containers
      # Generated at 2018-05-23 15:00:05 UTC
      #

      # By default, the autogenerated rules include rules that attempt to
      # restrict the set of system calls that can be performed by
      # applications. However, we know that these rules are fairly FP-prone,
      # so they are disabled by default. If you'd like to enable them,
      # either change or override this macro's condition to "evt.num >= 0".
      - macro: k8s_dns_consider_syscalls
        condition: (evt.num < 0)

      # These policies are limited to containers, specifically those where
      # the container image name starts with "k8s_dns"
      - macro: app_k8s_dns
        condition: container and container.image contains "k8s_dns"

      # Considering any inbound network connection suspect
      - rule: Unexpected inbound connection k8s_dns
        desc: Detect any inbound connection arriving at k8s_dns
        condition: inbound and evt.rawres >= 0 and app_k8s_dns
        output: Unexpected inbound connection arriving at k8s_dns (command=%proc.cmdline pid=%proc.pid connection=%fd.name user=%user.name %container.info image=%container.image)
        priority: NOTICE

      # Considering any outbound networking suspect
      - rule: Unexpected outbound connection k8s_dns
        desc: Detect any outbound connection originating from k8s_dns
        condition: outbound and app_k8s_dns
        output: Unexpected outbound connection originating at k8s_dns (command=%proc.cmdline pid=%proc.pid connection=%fd.name user=%user.name %container.info image=%container.image)
        priority: NOTICE

      # Restricting listening ports to selected set

      - list: k8s_dns_allowed_inbound_ports_tcp
        items: [53]

      - rule: Unexpected inbound tcp connection k8s_dns
        desc: Detect inbound traffic to k8s_dns using tcp on a port outside of expected set
        condition: inbound and evt.rawres >= 0 and not fd.sport in (k8s_dns_allowed_inbound_ports_tcp) and app_k8s_dns
        output: Inbound network connection to k8s_dns on unexpected port (command=%proc.cmdline pid=%proc.pid connection=%fd.name sport=%fd.sport user=%user.name %container.info image=%container.image)
        priority: NOTICE
      - list: k8s_dns_allowed_inbound_ports_udp
        items: [53]

      - rule: Unexpected inbound udp connection k8s_dns
        desc: Detect inbound traffic to k8s_dns using udp on a port outside of expected set
        condition: inbound and evt.rawres >= 0 and not fd.sport in (k8s_dns_allowed_inbound_ports_udp) and app_k8s_dns
        output: Inbound network connection to k8s_dns on unexpected port (command=%proc.cmdline pid=%proc.pid connection=%fd.name sport=%fd.sport user=%user.name %container.info image=%container.image)
        priority: NOTICE

      # Restricting spawned processes to selected set

      - list: k8s_dns_allowed_processes
        items: ["/dnsmasq-nanny", "/usr/sbin/dnsmasq", "dnsmasq"]

      - rule: Unexpected spawned process k8s_dns
        desc: Detect a process started in a k8s_dns container outside of an expected set
        condition: spawned_process and not proc.name in (k8s_dns_allowed_processes) and app_k8s_dns
        output: Unexpected process spawned in k8s_dns container (command=%proc.cmdline pid=%proc.pid user=%user.name %container.info image=%container.image)
        priority: NOTICE

      # Restricting files read or written to specific set

      - list: k8s_dns_allowed_file_prefixes_readonly
        items: ["/etc/k8s/dns"]

      - rule: Unexpected file access readonly for k8s_dns
        desc: Detect an attempt to access a file readonly other than below an expected list of directories
        condition: (open_read and evt.is_open_write=false) and not fd.name pmatch (k8s_dns_allowed_file_prefixes_readonly) and app_k8s_dns
        output: Unexpected file accessed readonly for k8s_dns (command=%proc.cmdline pid=%proc.pid file=%fd.name %container.info image=%container.image)
        priority: NOTICE

      - list: k8s_dns_allowed_file_prefixes_readwrite
        items: ["/dev"]

      - rule: Unexpected file access readwrite for k8s_dns
        desc: Detect an attempt to access a file readwrite other than below an expected list of directories
        condition: (open_write) and not fd.name pmatch (k8s_dns_allowed_file_prefixes_readwrite) and app_k8s_dns
        output: Unexpected file accessed readwrite for k8s_dns (command=%proc.cmdline pid=%proc.pid file=%fd.name %container.info image=%container.image)
        priority: NOTICE
